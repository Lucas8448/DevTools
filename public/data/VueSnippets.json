[
  {
    "id": "1",
    "description": "Rendering Lists",
    "code": "const numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) => <li>{number}</li>);\n\nreturn (\n  <ul>{listItems}</ul>\n);"
  },
  {
    "id": "2",
    "description": "Reactive State with Composition API",
    "code": "import { reactive, ref } from 'vue';\n\nconst count = ref(0);"
  },
  {
    "id": "3",
    "description": "Side Effects with Composition API",
    "code": "import { onMounted, watch } from 'vue';\n\nonMounted(() => {\n  document.title = `You clicked ${count.value} times`;\n});\n\nwatch(count, (newCount) => {\n  document.title = `You clicked ${newCount} times`;\n});"
  },
  {
    "id": "4",
    "description": "Conditional Rendering",
    "code": "return (\n  <div>\n    {isTrue ? 'This is true' : 'This is false'}\n  </div>\n);"
  },
  {
    "id": "5",
    "description": "Event Handling",
    "code": "const handleClick = () => {\n  count.value++;\n}\n\nreturn (\n  <button @click='handleClick'>Click me</button>\n);"
  },
  {
    "id": "6",
    "description": "Props in Functional Component",
    "code": "const Welcome = {\n  props: ['name'],\n  template: '<h1>Hello, {{ name }}</h1>'\n};"
  },
  {
    "id": "7",
    "description": "Reactive State in Options API",
    "code": "export default {\n  data() {\n    return {\n      count: 0\n    };\n  }\n}"
  },
  {
    "id": "8",
    "description": "Fetching Data from an API",
    "code": "import { reactive, onMounted } from 'vue';\n\nexport default {\n  setup() {\n    const data = reactive(null);\n\n    onMounted(async () => {\n      const response = await fetch('https://api.example.com/data');\n      const result = await response.json();\n      data.value = result;\n    });\n\n    return { data };\n  }\n}"
  },
  {
    "id": "9",
    "description": "Routing with Vue Router",
    "code": "import { createRouter, createWebHistory } from 'vue-router';\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [\n    { path: '/', component: Home },\n    { path: '/about', component: About }\n  ]\n});\n\nconst app = createApp(App);\napp.use(router);\napp.mount('#app');"
  },
  {
    "id": "10",
    "description": "Form Handling",
    "code": "import { ref } from 'vue';\n\nconst name = ref('');\n\nconst handleSubmit = (event) => {\n  event.preventDefault();\n  console.log('Submitted name:', name.value);\n};\n\nreturn (\n  <form onSubmit={handleSubmit}>\n    <label>\n      Name:\n      <input type='text' v-model={name.value} />\n    </label>\n    <button type='submit'>Submit</button>\n  </form>\n);"
  },
  {
    "id": "11",
    "description": "Provide/Inject for Context",
    "code": "const MyContext = Symbol();\n\nconst App = {\n  provide() {\n    return {\n      [MyContext]: 'Hello, Context!'\n    };\n  },\n  template: '<MyComponent />'\n};\n\nconst MyComponent = {\n  inject: [MyContext],\n  template: '<div>Context Value: {{ $ctx }}</div>',\n  computed: {\n    $ctx() {\n      return this[MyContext];\n    }\n  }\n};"
  },
  {
    "id": "12",
    "description": "Styling with CSS Modules",
    "code": "<template>\n  <div :class='$style.container'>Styled with CSS Modules</div>\n</template>\n\n<script>\nimport styles from './MyComponent.module.css';\n\nexport default {\n  name: 'MyComponent',\n  computed: {\n    $style() {\n      return styles;\n    }\n  }\n};\n</script>\n\n<style module>\n.container {\n  /* Styles here */\n}\n</style>"
  },
  {
    "id": "13",
    "description": "Handling Form Validation",
    "code": "import { ref, computed } from 'vue';\n\nconst email = ref('');\nconst password = ref('');\n\nconst validForm = computed(() => email.value !== '' && password.value !== '');\n\nconst handleSubmit = (event) => {\n  event.preventDefault();\n  // Perform form submission\n};\n\nreturn (\n  <form onSubmit={handleSubmit}>\n    <label>\n      Email:\n      <input type='email' v-model={email.value} />\n    </label>\n    <label>\n      Password:\n      <input type='password' v-model={password.value} />\n    </label>\n    <button type='submit' :disabled='!validForm'>Submit</button>\n  </form>\n);"
  },
  {
    "id": "14",
    "description": "Using Refs",
    "code": "import { ref } from 'vue';\n\nconst inputRef = ref(null);\n\nconst handleClick = () => {\n  inputRef.value.focus();\n};\n\nreturn (\n  <div>\n    <input type='text' ref={inputRef} />\n    <button onClick={handleClick}>Focus Input</button>\n  </div>\n);"
  },
  {
    "id": "15",
    "description": "Fetching Data with Axios",
    "code": "import { reactive, onMounted } from 'vue';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const data = reactive(null);\n\n    onMounted(async () => {\n      const response = await axios.get('https://api.example.com/data');\n      data.value = response.data;\n    });\n\n    return { data };\n  }\n}"
  }
]